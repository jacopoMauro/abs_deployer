module Delta711c8bfdd28e48f9b79e079a3b8ea719;
import * from ABS.DC;
import * from HaskellAux;
import * from FredhopperCloudServices;

delta SmartDeployDelta;
uses ABS.SmartDeploy;
adds import * from FredhopperCloudServices;
adds import * from ABS.DC;
adds import * from HaskellAux;
modifies interface SmartDeployInterface {
	adds List<Pair<EndPoint,DeploymentComponent>> getEndPoint();
	adds List<Pair<IQueryService,DeploymentComponent>> getIQueryService();
	adds List<Pair<Service,DeploymentComponent>> getService();
	adds List<Pair<ServiceProvider,DeploymentComponent>> getServiceProvider();
	adds List<Pair<DeploymentAgent,DeploymentComponent>> getDeploymentAgent();
	adds List<Pair<LoadBalancerService,DeploymentComponent>> getLoadBalancerService();
	adds List<Pair<LoadBalancerEndPoint,DeploymentComponent>> getLoadBalancerEndPoint();
	adds List<Pair<DeploymentService,DeploymentComponent>> getDeploymentService();
	adds List<Pair<PlatformService,DeploymentComponent>> getPlatformService();
	adds List<Pair<MonitorPlatformService,DeploymentComponent>> getMonitorPlatformService();
	adds List<DeploymentComponent> getDeploymentComponent();
	adds Unit deploy();
	adds Unit undeploy();
}
adds class AddQueryDeployer(SmartCloudProvider cloudProvider, MonitorPlatformService platformServiceObjEu, MonitorPlatformService platformServiceObjUs, DeploymentService deploymentServiceObjEu, DeploymentService deploymentServiceObjUs, LoadBalancerEndPoint loadBalancerEndPointObjEu1, LoadBalancerEndPoint loadBalancerEndPointObjUs1, LoadBalancerEndPoint loadBalancerEndPointObjUs2) implements SmartDeployInterface {

	List<Pair<EndPoint,DeploymentComponent>> ls_EndPoint = Nil;
	List<Pair<IQueryService,DeploymentComponent>> ls_IQueryService = Nil;
	List<Pair<Service,DeploymentComponent>> ls_Service = Nil;
	List<Pair<ServiceProvider,DeploymentComponent>> ls_ServiceProvider = Nil;
	List<Pair<DeploymentAgent,DeploymentComponent>> ls_DeploymentAgent = Nil;
	List<Pair<LoadBalancerService,DeploymentComponent>> ls_LoadBalancerService = Nil;
	List<Pair<LoadBalancerEndPoint,DeploymentComponent>> ls_LoadBalancerEndPoint = Nil;
	List<Pair<DeploymentService,DeploymentComponent>> ls_DeploymentService = Nil;
	List<Pair<PlatformService,DeploymentComponent>> ls_PlatformService = Nil;
	List<Pair<MonitorPlatformService,DeploymentComponent>> ls_MonitorPlatformService = Nil;
	List<DeploymentComponent> ls_DeploymentComponent = Nil;

	List<Pair<EndPoint,DeploymentComponent>> getEndPoint() { return ls_EndPoint; }
	List<Pair<IQueryService,DeploymentComponent>> getIQueryService() { return ls_IQueryService; }
	List<Pair<Service,DeploymentComponent>> getService() { return ls_Service; }
	List<Pair<ServiceProvider,DeploymentComponent>> getServiceProvider() { return ls_ServiceProvider; }
	List<Pair<DeploymentAgent,DeploymentComponent>> getDeploymentAgent() { return ls_DeploymentAgent; }
	List<Pair<LoadBalancerService,DeploymentComponent>> getLoadBalancerService() { return ls_LoadBalancerService; }
	List<Pair<LoadBalancerEndPoint,DeploymentComponent>> getLoadBalancerEndPoint() { return ls_LoadBalancerEndPoint; }
	List<Pair<DeploymentService,DeploymentComponent>> getDeploymentService() { return ls_DeploymentService; }
	List<Pair<PlatformService,DeploymentComponent>> getPlatformService() { return ls_PlatformService; }
	List<Pair<MonitorPlatformService,DeploymentComponent>> getMonitorPlatformService() { return ls_MonitorPlatformService; }
	List<DeploymentComponent> getDeploymentComponent() { return ls_DeploymentComponent; }

	Unit deploy() {
		DeploymentComponent m4_large_us2_0 = cloudProvider.prelaunchInstanceNamed("m4_large_us2");
		ls_DeploymentComponent = Cons(m4_large_us2_0,ls_DeploymentComponent);
		DeploymentComponent m4_large_us1_0 = cloudProvider.prelaunchInstanceNamed("m4_large_us1");
		ls_DeploymentComponent = Cons(m4_large_us1_0,ls_DeploymentComponent);
		[DC: m4_large_us2_0] DeploymentAgent oDef___DeploymentAgentImpl_0_m4_large_us2_0 = new DeploymentAgentImpl();
		ls_DeploymentAgent = Cons(Pair(oDef___DeploymentAgentImpl_0_m4_large_us2_0,m4_large_us2_0), ls_DeploymentAgent);
		[DC: m4_large_us1_0] DeploymentAgent oDef___DeploymentAgentImpl_0_m4_large_us1_0 = new DeploymentAgentImpl();
		ls_DeploymentAgent = Cons(Pair(oDef___DeploymentAgentImpl_0_m4_large_us1_0,m4_large_us1_0), ls_DeploymentAgent);
		[DC: m4_large_us1_0] IQueryService olive___QueryServiceImpl_0_m4_large_us1_0 = new QueryServiceImpl(oDef___DeploymentAgentImpl_0_m4_large_us1_0, "Customer X", False);
		ls_IQueryService = Cons(Pair(olive___QueryServiceImpl_0_m4_large_us1_0,m4_large_us1_0), ls_IQueryService);
		ls_Service = Cons(Pair(olive___QueryServiceImpl_0_m4_large_us1_0,m4_large_us1_0), ls_Service);
		ls_EndPoint = Cons(Pair(olive___QueryServiceImpl_0_m4_large_us1_0,m4_large_us1_0), ls_EndPoint);
		[DC: m4_large_us2_0] IQueryService olive___QueryServiceImpl_0_m4_large_us2_0 = new QueryServiceImpl(oDef___DeploymentAgentImpl_0_m4_large_us2_0, "Customer X", False);
		ls_IQueryService = Cons(Pair(olive___QueryServiceImpl_0_m4_large_us2_0,m4_large_us2_0), ls_IQueryService);
		ls_Service = Cons(Pair(olive___QueryServiceImpl_0_m4_large_us2_0,m4_large_us2_0), ls_Service);
		ls_EndPoint = Cons(Pair(olive___QueryServiceImpl_0_m4_large_us2_0,m4_large_us2_0), ls_EndPoint);
		loadBalancerEndPointObjUs1.add(olive___QueryServiceImpl_0_m4_large_us2_0);
		loadBalancerEndPointObjUs1.add(olive___QueryServiceImpl_0_m4_large_us1_0);
		loadBalancerEndPointObjUs2.add(olive___QueryServiceImpl_0_m4_large_us2_0);
		loadBalancerEndPointObjUs2.add(olive___QueryServiceImpl_0_m4_large_us1_0);
		platformServiceObjUs.addServiceInstance(olive___QueryServiceImpl_0_m4_large_us2_0);
		platformServiceObjUs.addServiceInstance(olive___QueryServiceImpl_0_m4_large_us1_0);
		oDef___DeploymentAgentImpl_0_m4_large_us2_0.install(olive___QueryServiceImpl_0_m4_large_us2_0);
		oDef___DeploymentAgentImpl_0_m4_large_us1_0.install(olive___QueryServiceImpl_0_m4_large_us1_0);
		deploymentServiceObjUs.add(oDef___DeploymentAgentImpl_0_m4_large_us2_0);
		deploymentServiceObjUs.add(oDef___DeploymentAgentImpl_0_m4_large_us1_0);
	}

	Unit undeploy() {
		ls_EndPoint = Nil;
		ls_IQueryService = Nil;
		ls_Service = Nil;
		ls_ServiceProvider = Nil;
		ls_DeploymentAgent = Nil;
		ls_LoadBalancerService = Nil;
		ls_LoadBalancerEndPoint = Nil;
		ls_DeploymentService = Nil;
		ls_PlatformService = Nil;
		ls_MonitorPlatformService = Nil;
		while ( !isEmpty(ls_DeploymentComponent) ) {
			cloudProvider.shutdownInstance(head(ls_DeploymentComponent));
			ls_DeploymentComponent = tail(ls_DeploymentComponent);
		}
	}
}
adds class MainSmartDeployer(SmartCloudProvider cloudProvider) implements SmartDeployInterface {

	List<Pair<EndPoint,DeploymentComponent>> ls_EndPoint = Nil;
	List<Pair<IQueryService,DeploymentComponent>> ls_IQueryService = Nil;
	List<Pair<Service,DeploymentComponent>> ls_Service = Nil;
	List<Pair<ServiceProvider,DeploymentComponent>> ls_ServiceProvider = Nil;
	List<Pair<DeploymentAgent,DeploymentComponent>> ls_DeploymentAgent = Nil;
	List<Pair<LoadBalancerService,DeploymentComponent>> ls_LoadBalancerService = Nil;
	List<Pair<LoadBalancerEndPoint,DeploymentComponent>> ls_LoadBalancerEndPoint = Nil;
	List<Pair<DeploymentService,DeploymentComponent>> ls_DeploymentService = Nil;
	List<Pair<PlatformService,DeploymentComponent>> ls_PlatformService = Nil;
	List<Pair<MonitorPlatformService,DeploymentComponent>> ls_MonitorPlatformService = Nil;
	List<DeploymentComponent> ls_DeploymentComponent = Nil;

	List<Pair<EndPoint,DeploymentComponent>> getEndPoint() { return ls_EndPoint; }
	List<Pair<IQueryService,DeploymentComponent>> getIQueryService() { return ls_IQueryService; }
	List<Pair<Service,DeploymentComponent>> getService() { return ls_Service; }
	List<Pair<ServiceProvider,DeploymentComponent>> getServiceProvider() { return ls_ServiceProvider; }
	List<Pair<DeploymentAgent,DeploymentComponent>> getDeploymentAgent() { return ls_DeploymentAgent; }
	List<Pair<LoadBalancerService,DeploymentComponent>> getLoadBalancerService() { return ls_LoadBalancerService; }
	List<Pair<LoadBalancerEndPoint,DeploymentComponent>> getLoadBalancerEndPoint() { return ls_LoadBalancerEndPoint; }
	List<Pair<DeploymentService,DeploymentComponent>> getDeploymentService() { return ls_DeploymentService; }
	List<Pair<PlatformService,DeploymentComponent>> getPlatformService() { return ls_PlatformService; }
	List<Pair<MonitorPlatformService,DeploymentComponent>> getMonitorPlatformService() { return ls_MonitorPlatformService; }
	List<DeploymentComponent> getDeploymentComponent() { return ls_DeploymentComponent; }

	Unit deploy() {
		DeploymentComponent c4_2xlarge_eu_0 = cloudProvider.prelaunchInstanceNamed("c4_2xlarge_eu");
		ls_DeploymentComponent = Cons(c4_2xlarge_eu_0,ls_DeploymentComponent);
		DeploymentComponent m4_large_eu_0 = cloudProvider.prelaunchInstanceNamed("m4_large_eu");
		ls_DeploymentComponent = Cons(m4_large_eu_0,ls_DeploymentComponent);
		DeploymentComponent m4_xlarge_eu_0 = cloudProvider.prelaunchInstanceNamed("m4_xlarge_eu");
		ls_DeploymentComponent = Cons(m4_xlarge_eu_0,ls_DeploymentComponent);
		DeploymentComponent c4_2xlarge_us1_0 = cloudProvider.prelaunchInstanceNamed("c4_2xlarge_us1");
		ls_DeploymentComponent = Cons(c4_2xlarge_us1_0,ls_DeploymentComponent);
		DeploymentComponent m4_large_us1_0 = cloudProvider.prelaunchInstanceNamed("m4_large_us1");
		ls_DeploymentComponent = Cons(m4_large_us1_0,ls_DeploymentComponent);
		DeploymentComponent c4_xlarge_eu_0 = cloudProvider.prelaunchInstanceNamed("c4_xlarge_eu");
		ls_DeploymentComponent = Cons(c4_xlarge_eu_0,ls_DeploymentComponent);
		DeploymentComponent c4_xlarge_us1_0 = cloudProvider.prelaunchInstanceNamed("c4_xlarge_us1");
		ls_DeploymentComponent = Cons(c4_xlarge_us1_0,ls_DeploymentComponent);
		DeploymentComponent c4_xlarge_us2_0 = cloudProvider.prelaunchInstanceNamed("c4_xlarge_us2");
		ls_DeploymentComponent = Cons(c4_xlarge_us2_0,ls_DeploymentComponent);
		DeploymentComponent m4_xlarge_us2_0 = cloudProvider.prelaunchInstanceNamed("m4_xlarge_us2");
		ls_DeploymentComponent = Cons(m4_xlarge_us2_0,ls_DeploymentComponent);
		[DC: c4_xlarge_us1_0] LoadBalancerEndPoint oDef___LoadBalancerEndPointImpl_0_c4_xlarge_us1_0 = new LoadBalancerEndPointImpl();
		ls_LoadBalancerEndPoint = Cons(Pair(oDef___LoadBalancerEndPointImpl_0_c4_xlarge_us1_0,c4_xlarge_us1_0), ls_LoadBalancerEndPoint);
		ls_EndPoint = Cons(Pair(oDef___LoadBalancerEndPointImpl_0_c4_xlarge_us1_0,c4_xlarge_us1_0), ls_EndPoint);
		[DC: c4_2xlarge_us1_0] LoadBalancerService oDef___LoadBalancerServiceImpl_0_c4_2xlarge_us1_0 = new LoadBalancerServiceImpl();
		ls_LoadBalancerService = Cons(Pair(oDef___LoadBalancerServiceImpl_0_c4_2xlarge_us1_0,c4_2xlarge_us1_0), ls_LoadBalancerService);
		[DC: c4_2xlarge_eu_0] DeploymentService oDef___DeploymentServiceImpl_0_c4_2xlarge_eu_0 = new DeploymentServiceImpl();
		ls_DeploymentService = Cons(Pair(oDef___DeploymentServiceImpl_0_c4_2xlarge_eu_0,c4_2xlarge_eu_0), ls_DeploymentService);
		[DC: m4_xlarge_eu_0] DeploymentAgent oDef___DeploymentAgentImpl_0_m4_xlarge_eu_0 = new DeploymentAgentImpl();
		ls_DeploymentAgent = Cons(Pair(oDef___DeploymentAgentImpl_0_m4_xlarge_eu_0,m4_xlarge_eu_0), ls_DeploymentAgent);
		[DC: c4_xlarge_us2_0] LoadBalancerEndPoint oDef___LoadBalancerEndPointImpl_0_c4_xlarge_us2_0 = new LoadBalancerEndPointImpl();
		ls_LoadBalancerEndPoint = Cons(Pair(oDef___LoadBalancerEndPointImpl_0_c4_xlarge_us2_0,c4_xlarge_us2_0), ls_LoadBalancerEndPoint);
		ls_EndPoint = Cons(Pair(oDef___LoadBalancerEndPointImpl_0_c4_xlarge_us2_0,c4_xlarge_us2_0), ls_EndPoint);
		[DC: c4_xlarge_eu_0] LoadBalancerEndPoint oDef___LoadBalancerEndPointImpl_0_c4_xlarge_eu_0 = new LoadBalancerEndPointImpl();
		ls_LoadBalancerEndPoint = Cons(Pair(oDef___LoadBalancerEndPointImpl_0_c4_xlarge_eu_0,c4_xlarge_eu_0), ls_LoadBalancerEndPoint);
		ls_EndPoint = Cons(Pair(oDef___LoadBalancerEndPointImpl_0_c4_xlarge_eu_0,c4_xlarge_eu_0), ls_EndPoint);
		[DC: m4_large_eu_0] DeploymentAgent oDef___DeploymentAgentImpl_0_m4_large_eu_0 = new DeploymentAgentImpl();
		ls_DeploymentAgent = Cons(Pair(oDef___DeploymentAgentImpl_0_m4_large_eu_0,m4_large_eu_0), ls_DeploymentAgent);
		[DC: c4_2xlarge_eu_0] LoadBalancerService oDef___LoadBalancerServiceImpl_0_c4_2xlarge_eu_0 = new LoadBalancerServiceImpl();
		ls_LoadBalancerService = Cons(Pair(oDef___LoadBalancerServiceImpl_0_c4_2xlarge_eu_0,c4_2xlarge_eu_0), ls_LoadBalancerService);
		[DC: m4_large_us1_0] DeploymentAgent oDef___DeploymentAgentImpl_0_m4_large_us1_0 = new DeploymentAgentImpl();
		ls_DeploymentAgent = Cons(Pair(oDef___DeploymentAgentImpl_0_m4_large_us1_0,m4_large_us1_0), ls_DeploymentAgent);
		[DC: m4_xlarge_us2_0] DeploymentAgent oDef___DeploymentAgentImpl_0_m4_xlarge_us2_0 = new DeploymentAgentImpl();
		ls_DeploymentAgent = Cons(Pair(oDef___DeploymentAgentImpl_0_m4_xlarge_us2_0,m4_xlarge_us2_0), ls_DeploymentAgent);
		[DC: c4_2xlarge_us1_0] DeploymentService oDef___DeploymentServiceImpl_0_c4_2xlarge_us1_0 = new DeploymentServiceImpl();
		ls_DeploymentService = Cons(Pair(oDef___DeploymentServiceImpl_0_c4_2xlarge_us1_0,c4_2xlarge_us1_0), ls_DeploymentService);
		[DC: m4_xlarge_us2_0] IQueryService ostaging___QueryServiceImpl_0_m4_xlarge_us2_0 = new QueryServiceImpl(oDef___DeploymentAgentImpl_0_m4_xlarge_us2_0, "Customer X", True);
		ls_IQueryService = Cons(Pair(ostaging___QueryServiceImpl_0_m4_xlarge_us2_0,m4_xlarge_us2_0), ls_IQueryService);
		ls_Service = Cons(Pair(ostaging___QueryServiceImpl_0_m4_xlarge_us2_0,m4_xlarge_us2_0), ls_Service);
		ls_EndPoint = Cons(Pair(ostaging___QueryServiceImpl_0_m4_xlarge_us2_0,m4_xlarge_us2_0), ls_EndPoint);
		[DC: c4_2xlarge_eu_0] MonitorPlatformService oDef___PlatformServiceImpl_0_c4_2xlarge_eu_0 = new PlatformServiceImpl(oDef___DeploymentServiceImpl_0_c4_2xlarge_eu_0, oDef___LoadBalancerServiceImpl_0_c4_2xlarge_eu_0);
		ls_MonitorPlatformService = Cons(Pair(oDef___PlatformServiceImpl_0_c4_2xlarge_eu_0,c4_2xlarge_eu_0), ls_MonitorPlatformService);
		ls_PlatformService = Cons(Pair(oDef___PlatformServiceImpl_0_c4_2xlarge_eu_0,c4_2xlarge_eu_0), ls_PlatformService);
		[DC: m4_large_us1_0] IQueryService olive___QueryServiceImpl_0_m4_large_us1_0 = new QueryServiceImpl(oDef___DeploymentAgentImpl_0_m4_large_us1_0, "Customer X", False);
		ls_IQueryService = Cons(Pair(olive___QueryServiceImpl_0_m4_large_us1_0,m4_large_us1_0), ls_IQueryService);
		ls_Service = Cons(Pair(olive___QueryServiceImpl_0_m4_large_us1_0,m4_large_us1_0), ls_Service);
		ls_EndPoint = Cons(Pair(olive___QueryServiceImpl_0_m4_large_us1_0,m4_large_us1_0), ls_EndPoint);
		[DC: m4_xlarge_eu_0] IQueryService ostaging___QueryServiceImpl_0_m4_xlarge_eu_0 = new QueryServiceImpl(oDef___DeploymentAgentImpl_0_m4_xlarge_eu_0, "Customer X", True);
		ls_IQueryService = Cons(Pair(ostaging___QueryServiceImpl_0_m4_xlarge_eu_0,m4_xlarge_eu_0), ls_IQueryService);
		ls_Service = Cons(Pair(ostaging___QueryServiceImpl_0_m4_xlarge_eu_0,m4_xlarge_eu_0), ls_Service);
		ls_EndPoint = Cons(Pair(ostaging___QueryServiceImpl_0_m4_xlarge_eu_0,m4_xlarge_eu_0), ls_EndPoint);
		[DC: m4_large_eu_0] IQueryService olive___QueryServiceImpl_0_m4_large_eu_0 = new QueryServiceImpl(oDef___DeploymentAgentImpl_0_m4_large_eu_0, "Customer X", False);
		ls_IQueryService = Cons(Pair(olive___QueryServiceImpl_0_m4_large_eu_0,m4_large_eu_0), ls_IQueryService);
		ls_Service = Cons(Pair(olive___QueryServiceImpl_0_m4_large_eu_0,m4_large_eu_0), ls_Service);
		ls_EndPoint = Cons(Pair(olive___QueryServiceImpl_0_m4_large_eu_0,m4_large_eu_0), ls_EndPoint);
		[DC: c4_2xlarge_us1_0] MonitorPlatformService oDef___PlatformServiceImpl_0_c4_2xlarge_us1_0 = new PlatformServiceImpl(oDef___DeploymentServiceImpl_0_c4_2xlarge_us1_0, oDef___LoadBalancerServiceImpl_0_c4_2xlarge_us1_0);
		ls_MonitorPlatformService = Cons(Pair(oDef___PlatformServiceImpl_0_c4_2xlarge_us1_0,c4_2xlarge_us1_0), ls_MonitorPlatformService);
		ls_PlatformService = Cons(Pair(oDef___PlatformServiceImpl_0_c4_2xlarge_us1_0,c4_2xlarge_us1_0), ls_PlatformService);
		oDef___PlatformServiceImpl_0_c4_2xlarge_eu_0.addEndPoint(oDef___LoadBalancerEndPointImpl_0_c4_xlarge_eu_0);
		oDef___PlatformServiceImpl_0_c4_2xlarge_us1_0.addEndPoint(oDef___LoadBalancerEndPointImpl_0_c4_xlarge_us1_0);
		oDef___PlatformServiceImpl_0_c4_2xlarge_us1_0.addEndPoint(oDef___LoadBalancerEndPointImpl_0_c4_xlarge_us2_0);
		oDef___LoadBalancerEndPointImpl_0_c4_xlarge_eu_0.add(olive___QueryServiceImpl_0_m4_large_eu_0);
		oDef___LoadBalancerEndPointImpl_0_c4_xlarge_eu_0.add(ostaging___QueryServiceImpl_0_m4_xlarge_eu_0);
		oDef___LoadBalancerEndPointImpl_0_c4_xlarge_us1_0.add(olive___QueryServiceImpl_0_m4_large_us1_0);
		oDef___LoadBalancerEndPointImpl_0_c4_xlarge_us2_0.add(olive___QueryServiceImpl_0_m4_large_us1_0);
		oDef___LoadBalancerEndPointImpl_0_c4_xlarge_us1_0.add(ostaging___QueryServiceImpl_0_m4_xlarge_us2_0);
		oDef___LoadBalancerEndPointImpl_0_c4_xlarge_us2_0.add(ostaging___QueryServiceImpl_0_m4_xlarge_us2_0);
		oDef___PlatformServiceImpl_0_c4_2xlarge_eu_0.addServiceInstance(olive___QueryServiceImpl_0_m4_large_eu_0);
		oDef___PlatformServiceImpl_0_c4_2xlarge_eu_0.addServiceInstance(ostaging___QueryServiceImpl_0_m4_xlarge_eu_0);
		oDef___PlatformServiceImpl_0_c4_2xlarge_us1_0.addServiceInstance(olive___QueryServiceImpl_0_m4_large_us1_0);
		oDef___PlatformServiceImpl_0_c4_2xlarge_us1_0.addServiceInstance(ostaging___QueryServiceImpl_0_m4_xlarge_us2_0);
		oDef___DeploymentAgentImpl_0_m4_large_eu_0.install(olive___QueryServiceImpl_0_m4_large_eu_0);
		oDef___DeploymentAgentImpl_0_m4_xlarge_eu_0.install(ostaging___QueryServiceImpl_0_m4_xlarge_eu_0);
		oDef___DeploymentAgentImpl_0_m4_large_us1_0.install(olive___QueryServiceImpl_0_m4_large_us1_0);
		oDef___DeploymentAgentImpl_0_m4_xlarge_us2_0.install(ostaging___QueryServiceImpl_0_m4_xlarge_us2_0);
		oDef___DeploymentServiceImpl_0_c4_2xlarge_eu_0.add(oDef___DeploymentAgentImpl_0_m4_large_eu_0);
		oDef___DeploymentServiceImpl_0_c4_2xlarge_eu_0.add(oDef___DeploymentAgentImpl_0_m4_xlarge_eu_0);
		oDef___DeploymentServiceImpl_0_c4_2xlarge_us1_0.add(oDef___DeploymentAgentImpl_0_m4_large_us1_0);
		oDef___DeploymentServiceImpl_0_c4_2xlarge_us1_0.add(oDef___DeploymentAgentImpl_0_m4_xlarge_us2_0);
	}

	Unit undeploy() {
		ls_EndPoint = Nil;
		ls_IQueryService = Nil;
		ls_Service = Nil;
		ls_ServiceProvider = Nil;
		ls_DeploymentAgent = Nil;
		ls_LoadBalancerService = Nil;
		ls_LoadBalancerEndPoint = Nil;
		ls_DeploymentService = Nil;
		ls_PlatformService = Nil;
		ls_MonitorPlatformService = Nil;
		while ( !isEmpty(ls_DeploymentComponent) ) {
			cloudProvider.shutdownInstance(head(ls_DeploymentComponent));
			ls_DeploymentComponent = tail(ls_DeploymentComponent);
		}
	}
}
delta SmartDeployDelta1;
uses HaskellAux;
adds import * from ABS.DC;
modifies interface SmartCloudProvider {
adds Unit addSmartDeployInstances();
}
modifies class SmartCloudProvider {
	adds Unit addSmartDeployInstances() {
		this.addInstanceDescription(Pair("c4_2xlarge_eu",
			map[Pair(CostPerInterval,419)
			,Pair(Cores,8)
			,Pair(Memory,1500)
			]));
		this.addInstanceDescription(Pair("m4_large_eu",
			map[Pair(CostPerInterval,120)
			,Pair(Cores,2)
			,Pair(Memory,800)
			]));
		this.addInstanceDescription(Pair("m4_xlarge_eu",
			map[Pair(CostPerInterval,239)
			,Pair(Cores,4)
			,Pair(Memory,1600)
			]));
		this.addInstanceDescription(Pair("m4_large_us2",
			map[Pair(CostPerInterval,120)
			,Pair(Cores,2)
			,Pair(Memory,800)
			]));
		this.addInstanceDescription(Pair("c4_2xlarge_us1",
			map[Pair(CostPerInterval,419)
			,Pair(Cores,8)
			,Pair(Memory,1500)
			]));
		this.addInstanceDescription(Pair("c4_2xlarge_us2",
			map[Pair(CostPerInterval,419)
			,Pair(Cores,8)
			,Pair(Memory,1500)
			]));
		this.addInstanceDescription(Pair("m4_large_us1",
			map[Pair(CostPerInterval,120)
			,Pair(Cores,2)
			,Pair(Memory,800)
			]));
		this.addInstanceDescription(Pair("c4_xlarge_eu",
			map[Pair(CostPerInterval,209)
			,Pair(Cores,4)
			,Pair(Memory,750)
			]));
		this.addInstanceDescription(Pair("c4_xlarge_us1",
			map[Pair(CostPerInterval,209)
			,Pair(Cores,4)
			,Pair(Memory,750)
			]));
		this.addInstanceDescription(Pair("c4_xlarge_us2",
			map[Pair(CostPerInterval,209)
			,Pair(Cores,4)
			,Pair(Memory,750)
			]));
		this.addInstanceDescription(Pair("m4_xlarge_us2",
			map[Pair(CostPerInterval,239)
			,Pair(Cores,4)
			,Pair(Memory,1600)
			]));
		this.addInstanceDescription(Pair("m4_xlarge_us1",
			map[Pair(CostPerInterval,239)
			,Pair(Cores,4)
			,Pair(Memory,1600)
			]));
	}
}

productline SmartDeployProductLine;
features SmartDeployFeature;
delta SmartDeployDelta when SmartDeployFeature;
delta SmartDeployDelta1 when SmartDeployFeature;
product SmartDeploy (SmartDeployFeature);
